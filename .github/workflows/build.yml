name: IINACT build

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    env:
      RELEASE_VERSION: '0.0.0.0'
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Download Dalamud
      run: |
        Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
        Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"
    - name: Build
      run: dotnet build -c release
    - name: Upload IINACT
      uses: actions/upload-artifact@v3
      with:
        name: IINACT
        path: IINACT/bin/Release/win-x64/IINACT/latest.zip
    - name: Update repo.json if needed
      run: |
        $repo = Get-Content 'repo.json' -raw | ConvertFrom-Json
        $build = Get-Content 'IINACT/bin/Release/win-x64/IINACT/IINACT.json' -raw | ConvertFrom-Json
        if ($repo.AssemblyVersion -eq $build.AssemblyVersion) {
          Exit
        }
        Write-Output "RELEASE_VERSION=$($build.AssemblyVersion)" >> $env:GITHUB_ENV
        $repo.AssemblyVersion = $repo.TestingAssemblyVersion = $build.AssemblyVersion
        $repo.DownloadLinkInstall = 'https://github.com/marzent/IINACT/releases/download/v' + $repo.AssemblyVersion + '/IINACT.zip'
        $repo.DownloadLinkTesting =  'https://github.com/marzent/IINACT/releases/download/v' + $repo.TestingAssemblyVersion + '/IINACT.zip'
        $repo.DownloadLinkUpdate = $repo.DownloadLinkInstall
        $repo | ConvertTo-Json | % { "[`n" + $_ + "`n]" } | Set-Content 'repo.json'
    - name: Create Release
      if: ${{ env.RELEASE_VERSION != '0.0.0.0' }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.RELEASE_VERSION }}
        release_name: IINACT ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      if: ${{ env.RELEASE_VERSION != '0.0.0.0' }}
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./IINACT/bin/Release/win-x64/IINACT/latest.zip
        asset_name: IINACT.zip
        asset_content_type: application/zip
    - name: Commit repo.json
      if: ${{ env.RELEASE_VERSION != '0.0.0.0' }}
      run: |
        git config --global user.name "Actions User"
        git config --global user.email "actions@github.com"
        git fetch origin main
        git checkout main
        git add repo.json
        git commit -m "[CI] updating repo.json for ${{ env.RELEASE_VERSION }}" || true
        git push origin main   
    
    

